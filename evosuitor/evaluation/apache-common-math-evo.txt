
Start new session - Thu Oct 19 16:05:54 SGT 2017
==========================================================================================

Start new session - Thu Oct 19 16:06:30 SGT 2017
==========================================================================================
org.apache.commons.math.Testing.test.5
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFLE,line 6], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFGE,line 7], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFLE,line 8], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IFEQ,line 13], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IFEQ,line 16], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.integration.LegendreGaussIntegrator.integrate.168
------------------------------------------------------------------------------------------
NodeCoverage [node[4,TABLESWITCH,line 132], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.integration.SimpsonIntegrator.integrate.70
------------------------------------------------------------------------------------------
NodeCoverage [node[4,TABLESWITCH,line 132], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.integration.TrapezoidIntegrator.integrate.113
------------------------------------------------------------------------------------------
NodeCoverage [node[4,TABLESWITCH,line 132], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.integration.RombergIntegrator.integrate.71
------------------------------------------------------------------------------------------
NodeCoverage [node[4,TABLESWITCH,line 132], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunction.searchIndex.338
------------------------------------------------------------------------------------------
NodeCoverage [node[4,TABLESWITCH,line 132], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex.286
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.interpolate.78
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolator.interpolate.40
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolator.interpolate.41
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.LoessInterpolator.smooth.201
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.LoessInterpolator.checkAllFiniteReal.438
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.LoessInterpolator.checkStrictlyIncreasing.456
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatingFunction.value.190
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator.interpolate.54
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluate.164
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction.isStrictlyIncreasing.217
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.polynomials.PolynomialFunction.subtract.170
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.RiddersSolver.solve.178
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.SecantSolver.solve.162
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.BrentSolver.solve.225
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.BrentSolver.solve.309
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.MullerSolver.solve.205
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.MullerSolver.solve2.348
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.LaguerreSolver.solve.222
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.complex.ComplexFormat.format.149
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.complex.ComplexFormat.format.188
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.complex.Complex.equals.258
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.split.46
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.expInternal.292
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.logInternal.440
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.pow.508
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.sinInternal.674
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.cosInternal.702
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.atanInternal.845
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.align.694
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.equals.817
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.compare.859
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.trunc.958
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.add.1167
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.round.1331
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.multiply.1412
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.multiply.1517
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------

Start new session - Thu Oct 19 17:57:42 SGT 2017
==========================================================================================

Start new session - Thu Oct 19 17:57:52 SGT 2017
==========================================================================================

Start new session - Fri Oct 20 10:03:27 SGT 2017
==========================================================================================
org.apache.commons.math.dfp.Dfp.divide.1579
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.divide.1796
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.dotrap.2133
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.nextAfter.2233
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpField.split.522
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpField.computePi.603
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpField.computeExp.645
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpField.computeLn.728
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpDec.round.167
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpDec.nextAfter.295
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability.167
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.ZipfDistributionImpl.cumulativeProbability.161
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.NormalDistributionImpl.getInitialDomain.297
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.PascalDistributionImpl.inverseCumulativeProbability.203
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.ExponentialDistributionImpl.inverseCumulativeProbability.167
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability.84
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability.319
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.PoissonDistributionImpl.probability.189
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.WeibullDistributionImpl.inverseCumulativeProbability.164
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability.130
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.BetaDistributionImpl.density.146
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.BetaDistributionImpl.inverseCumulativeProbability.171
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 197], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPGE,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability.200
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.CauchyDistributionImpl.inverseCumulativeProbability.138
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.CauchyDistributionImpl.getInitialDomain.248
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate.251
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter.502
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection.677
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.exception.util.MessageFactory.buildMessage.63
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.exception.util.ArgUtils.flatten.44
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.BigFractionFormat.format.168
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.Fraction.getReducedFraction.601
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.BigFraction.equals.704
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.ProperBigFractionFormat.format.92
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.FractionFormat.format.174
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.geometry.Rotation.getAngles.614
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.geometry.Vector3D.angle.340
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.geometry.Vector3D.equals.416
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix.318
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix.643
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix.703
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex.594
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.RealVectorFormat.format.208
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.RealVectorFormat.parse.280
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayFieldVector.equals.820
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.SparseFieldVector.subtract.525
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.SparseFieldVector.equals.614
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockFieldMatrix.toBlocksLayout.214
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockFieldMatrix.setSubMatrix.813
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockFieldMatrix.getRowMatrix.865
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockFieldMatrix.setRowMatrix.918
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockRealMatrix.toBlocksLayout.209
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockRealMatrix.setSubMatrix.839
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockRealMatrix.getRowMatrix.891
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockRealMatrix.setRowMatrix.944
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.add.261
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.subtract.303
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.ebeMultiply.595
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.ebeDivide.633
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.dotProduct.687
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.getDistance.758
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.getL1Distance.806
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.getLInfDistance.854
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.outerProduct.942
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.equals.1190
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------

Start new session - Fri Oct 20 12:18:22 SGT 2017
==========================================================================================
org.apache.commons.math.Testing.test.5
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFLE,line 6], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[7,IFGE,line 7], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[11,IFLE,line 8], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[17,IFEQ,line 13], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[22,IFEQ,line 16], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.integration.LegendreGaussIntegrator.integrate.168
------------------------------------------------------------------------------------------
NodeCoverage [node[22,IF_ICMPGE,line 176], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[54,IF_ICMPLT,line 188], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[58,IFGT,line 188], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.integration.SimpsonIntegrator.integrate.70
------------------------------------------------------------------------------------------
NodeCoverage [node[15,IF_ICMPNE,line 75], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[55,IF_ICMPGT,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[74,IF_ICMPLT,line 86], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[94,IFLE,line 89], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[99,IFGT,line 89], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.integration.TrapezoidIntegrator.integrate.113
------------------------------------------------------------------------------------------
NodeCoverage [node[20,IF_ICMPGT,line 116], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[34,IF_ICMPLT,line 119], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[57,IFGT,line 124], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[75,IFGT,line 130], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.integration.RombergIntegrator.integrate.71
------------------------------------------------------------------------------------------
NodeCoverage [node[41,IF_ICMPGT,line 82], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[61,IF_ICMPGT,line 90], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[100,IF_ICMPLT,line 97], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[120,IFLE,line 100], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[125,IFGT,line 100], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunction.searchIndex.338
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 338], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[15,IF_ICMPGE,line 343], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[21,IFGT,line 344], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex.286
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 286], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[15,IF_ICMPGE,line 291], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[21,IFGT,line 292], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.interpolate.78
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 78], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[5,IFEQ,line 78], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[8,IFNE,line 78], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[17,IF_ICMPEQ,line 81], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[36,IF_ICMPGE,line 88], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[42,IF_ICMPEQ,line 89], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[65,IF_ICMPGE,line 100], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[73,IF_ICMPGE,line 102], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[104,IF_ICMPGE,line 112], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[113,IF_ICMPGE,line 114], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[135,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[143,IF_ICMPGE,line 124], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[174,IF_ICMPGE,line 134], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[183,IF_ICMPGE,line 136], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolator.interpolate.40
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[5,IFEQ,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[8,IFEQ,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[11,IFNE,line 40], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[20,IF_ICMPEQ,line 43], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[58,IF_ICMPGE,line 60], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPEQ,line 61], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[78,IF_ICMPGE,line 65], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPEQ,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IF_ICMPGE,line 70], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IF_ICMPGE,line 83], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IF_ICMPGE,line 90], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[184,IF_ICMPGE,line 97], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[216,IF_ICMPGE,line 105], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[225,IF_ICMPGE,line 107], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[234,IF_ICMPGE,line 109], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[292,IF_ICMPGE,line 121], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[301,IF_ICMPGE,line 123], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[310,IF_ICMPGE,line 125], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[352,IF_ICMPGE,line 135], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[361,IF_ICMPGE,line 137], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[370,IF_ICMPGE,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[401,IF_ICMPGE,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[415,IF_ICMPGE,line 151], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[429,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolator.interpolate.41
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 41], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[5,IFEQ,line 41], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[8,IFNE,line 41], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[17,IF_ICMPEQ,line 44], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[44,IF_ICMPGE,line 59], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[50,IF_ICMPEQ,line 60], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[64,IF_ICMPGE,line 64], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[90,IF_ICMPGE,line 74], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[109,IF_ICMPGE,line 81], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[129,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[139,IF_ICMPGE,line 89], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[162,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[172,IF_ICMPGE,line 98], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[195,IF_ICMPGE,line 105], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[209,IF_ICMPGE,line 108], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.LoessInterpolator.smooth.201
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IF_ICMPEQ,line 201], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[28,IFNE,line 208], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[49,IF_ICMPNE,line 218], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[61,IF_ICMPNE,line 222], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[86,IF_ICMPGE,line 228], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[148,IFLE,line 253], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[177,IFLE,line 263], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[215,IF_ICMPGE,line 285], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[270,IF_ICMPLE,line 282], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[297,IFGE,line 301], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[341,IF_ICMPLT,line 248], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[345,IF_ICMPNE,line 315], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[366,IFGE,line 328], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[382,IFLT,line 334], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[403,IF_ICMPLT,line 332], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[408,IF_ICMPLE,line 245], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.LoessInterpolator.checkAllFiniteReal.438
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 438], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[12,IFNE,line 440], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[15,IFEQ,line 440], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.LoessInterpolator.checkStrictlyIncreasing.456
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 456], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[8,IF_ICMPLT,line 457], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[18,IFLT,line 457], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatingFunction.value.190
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IFEQ,line 193], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[26,IFEQ,line 198], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[45,IFGE,line 204], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[57,IFEQ,line 210], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[90,IFEQ,line 220], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[102,IFNULL,line 223], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.interpolation.SmoothingBicubicSplineInterpolator.interpolate.54
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 54], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[5,IFEQ,line 54], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[8,IFNE,line 54], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[18,IF_ICMPEQ,line 57], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[49,IF_ICMPGE,line 72], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[55,IF_ICMPEQ,line 73], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[69,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 87], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[115,IF_ICMPGE,line 94], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[124,IF_ICMPGE,line 96], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[146,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[166,IF_ICMPGE,line 111], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[175,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[198,IF_ICMPGE,line 120], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[208,IF_ICMPGE,line 122], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[231,IF_ICMPGE,line 129], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[241,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[264,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[278,IF_ICMPGE,line 141], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluate.164
------------------------------------------------------------------------------------------
NodeCoverage [node[20,IF_ICMPGE,line 171], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[43,IFGE,line 177], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[58,IF_ICMPGE,line 186], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[65,IF_ICMPGE,line 187], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[93,IFNE,line 191], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[142,IFGE,line 201], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction.isStrictlyIncreasing.217
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 217], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[15,IFLT,line 218], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.polynomials.PolynomialFunction.subtract.170
------------------------------------------------------------------------------------------
NodeCoverage [node[23,IF_ICMPGE,line 175], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[44,IF_ICMPGE,line 178], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[49,IF_ICMPGE,line 179], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.RiddersSolver.solve.178
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.SecantSolver.solve.162
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.BrentSolver.solve.225
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.BrentSolver.solve.309
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IF_ICMPGE,line 313], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[17,IFGE,line 314], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[35,IFGT,line 323], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[60,IFGT,line 333], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[72,IFLT,line 337], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[78,IFGT,line 338], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[93,IFNE,line 349], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IFLE,line 360], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[166,IFGE,line 365], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[175,IFLT,line 366], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[197,IFLE,line 381], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[206,IFLE,line 383], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[217,IFGT,line 385], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[231,IFLE,line 389], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[238,IFLE,line 389], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[242,IF_ICMPNE,line 389], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.MullerSolver.solve.205
------------------------------------------------------------------------------------------
NodeCoverage [node[25,IFNE,line 213], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[31,IFNE,line 216], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[46,IF_ICMPGT,line 222], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[116,IFEQ,line 236], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[140,IFGT,line 241], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[153,IFGT,line 245], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[164,IFGE,line 254], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[174,IFGT,line 254], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[178,IFLE,line 254], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[188,IFGT,line 254], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[192,IFNE,line 254], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[198,IFNE,line 258], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[202,IFGE,line 259], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[210,IFGE,line 260], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[218,IFLE,line 261], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[226,IFLE,line 262], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[255,IFNE,line 268], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.MullerSolver.solve2.348
------------------------------------------------------------------------------------------
NodeCoverage [node[25,IFNE,line 356], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[31,IFNE,line 357], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[46,IF_ICMPGT,line 361], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[112,IFLT,line 370], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[128,IFLE,line 374], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[144,IFEQ,line 379], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[160,IFEQ,line 383], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[164,IFNE,line 383], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[200,IFGT,line 395], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[213,IFGT,line 399], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.analysis.solvers.LaguerreSolver.solve.222
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 222], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[13,IFNE,line 227], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[21,IFNE,line 228], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[42,IF_ICMPGE,line 233], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[75,IFEQ,line 238], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[95,IF_ICMPGE,line 245], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[103,IFEQ,line 246], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.complex.ComplexFormat.format.149
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.complex.ComplexFormat.format.188
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IFEQ,line 190], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[15,IFEQ,line 192], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.complex.Complex.equals.258
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ACMPNE,line 258], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[7,IFEQ,line 261], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[13,IFEQ,line 263], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[22,IFNE,line 266], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[28,IFNE,line 266], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.split.46
------------------------------------------------------------------------------------------
NodeCoverage [node[18,IF_ICMPGE,line 54], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[29,IF_ICMPLT,line 57], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[34,IF_ICMPGT,line 57], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[41,IF_ICMPNE,line 61], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[59,IF_ICMPNE,line 66], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[67,IF_ICMPLT,line 71], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[72,IF_ICMPGT,line 71], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[74,IFNE,line 71], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[94,IF_ICMPGE,line 78], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[105,IF_ICMPLT,line 80], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[110,IF_ICMPGT,line 80], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[113,IF_ICMPGE,line 80], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.expInternal.292
------------------------------------------------------------------------------------------
NodeCoverage [node[18,IF_ICMPGE,line 297], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[36,IFEQ,line 301], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.logInternal.440
------------------------------------------------------------------------------------------
NodeCoverage [node[49,IF_ICMPGE,line 447], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[73,IFEQ,line 453], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.pow.508
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.sinInternal.674
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.cosInternal.702
------------------------------------------------------------------------------------------
NodeCoverage [node[32,IF_ICMPGE,line 713], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[57,IFEQ,line 720], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpMath.atanInternal.845
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.align.694
------------------------------------------------------------------------------------------
NodeCoverage [node[12,IFGE,line 700], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[17,IFNE,line 704], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[26,IF_ICMPLE,line 708], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[51,IF_ICMPGE,line 719], decis, loopHeader], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[53,IFGE,line 720], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[55,IFEQ,line 725], decis, inloop], covered=true, coveredBranches=2, [FALSE, TRUE]]
NodeCoverage [node[71,IFEQ,line 737], decis], covered=true, coveredBranches=2, [FALSE, TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.equals.817
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.compare.859
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.trunc.958
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.add.1167
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------

Start new session - Fri Oct 20 13:05:30 SGT 2017
==========================================================================================
org.apache.commons.math.dfp.DfpMath.atanInternal.845
------------------------------------------------------------------------------------------
NodeCoverage [node[19,IF_ICMPGE,line 849], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[40,IFEQ,line 854], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.align.694
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.equals.817
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.compare.859
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.trunc.958
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.add.1167
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.round.1331
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.multiply.1412
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.multiply.1517
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.divide.1579
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.divide.1796
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.dotrap.2133
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.Dfp.nextAfter.2233
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpField.split.522
------------------------------------------------------------------------------------------
NodeCoverage [node[18,IF_ICMPGE,line 529], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IF_ICMPLT,line 532], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IF_ICMPGT,line 532], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[41,IF_ICMPNE,line 536], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[59,IF_ICMPNE,line 541], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[67,IF_ICMPLT,line 546], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[72,IF_ICMPGT,line 546], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[74,IFNE,line 546], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[96,IF_ICMPGE,line 553], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[107,IF_ICMPLT,line 555], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[112,IF_ICMPGT,line 555], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 555], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpField.computePi.603
------------------------------------------------------------------------------------------
NodeCoverage [node[25,IF_ICMPGE,line 615], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[83,IFEQ,line 629], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpField.computeExp.645
------------------------------------------------------------------------------------------
NodeCoverage [node[29,IF_ICMPGE,line 651], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[51,IFEQ,line 656], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpField.computeLn.728
------------------------------------------------------------------------------------------
NodeCoverage [node[34,IF_ICMPGE,line 734], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[58,IFEQ,line 740], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpDec.round.167
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.dfp.DfpDec.nextAfter.295
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability.167
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFGE,line 168], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IF_ICMPLT,line 170], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.ZipfDistributionImpl.cumulativeProbability.161
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFGT,line 161], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IF_ICMPLT,line 163], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.NormalDistributionImpl.getInitialDomain.297
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFGE,line 299], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IFLE,line 301], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.PascalDistributionImpl.inverseCumulativeProbability.203
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 206], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IFNE,line 208], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.ExponentialDistributionImpl.inverseCumulativeProbability.167
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFLT,line 169], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFLE,line 169], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFNE,line 172], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability.84
------------------------------------------------------------------------------------------
NodeCoverage [node[13,IF_ICMPGE,line 87], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IF_ICMPLT,line 89], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability.319
------------------------------------------------------------------------------------------
NodeCoverage [node[13,IF_ICMPGE,line 322], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IF_ICMPLE,line 324], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.PoissonDistributionImpl.probability.189
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFLT,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[4,IF_ICMPNE,line 190], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 192], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.WeibullDistributionImpl.inverseCumulativeProbability.164
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFLT,line 165], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFLE,line 165], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFNE,line 168], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[38,IFNE,line 170], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability.130
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 131], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[26,IFGE,line 139], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.BetaDistributionImpl.density.146
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFLT,line 147], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFLE,line 147], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFNE,line 149], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFGE,line 150], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFNE,line 155], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFGE,line 156], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.BetaDistributionImpl.inverseCumulativeProbability.171
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 173], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability.200
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFGT,line 200], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFLT,line 202], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.CauchyDistributionImpl.inverseCumulativeProbability.138
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFLT,line 139], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFLE,line 139], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFNE,line 142], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[38,IFNE,line 144], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.distribution.CauchyDistributionImpl.getInitialDomain.248
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFGE,line 250], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IFLE,line 252], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate.251
------------------------------------------------------------------------------------------
NodeCoverage [node[83,IF_ICMPGE,line 288], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[105,IFEQ,line 293], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[113,IF_ICMPGE,line 298], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[122,IFNE,line 300], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[151,IFNE,line 310], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[166,IFEQ,line 316], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[172,IF_ICMPGE,line 317], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[186,IFEQ,line 320], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[195,IF_ICMPGT,line 323], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[231,IFGT,line 331], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[238,IF_ICMPGE,line 336], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[257,IFGE,line 341], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[263,IF_ICMPGE,line 344], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[305,IF_ICMPGE,line 358], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[354,IFEQ,line 368], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[369,IFGE,line 377], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[386,IF_ICMPGE,line 384], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[407,IF_ICMPGT,line 389], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[436,IF_ICMPGE,line 395], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[480,IFNE,line 405], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[490,IFGT,line 408], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[494,IFGE,line 409], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[513,IFGE,line 411], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[517,IFGE,line 411], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[539,IFEQ,line 416], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[543,IFLT,line 416], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[557,IFLT,line 422], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[567,IF_ICMPGE,line 426], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[598,IF_ICMPGE,line 434], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[627,IFGT,line 444], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[632,IFGT,line 444], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[636,IFLE,line 444], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[643,IFGT,line 444], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[649,IFGT,line 453], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[653,IFGT,line 453], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[657,IFGT,line 453], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[676,IFGT,line 458], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[693,IFGT,line 463], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter.502
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection.677
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.exception.util.MessageFactory.buildMessage.63
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 64], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNULL,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNULL,line 69], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.exception.util.ArgUtils.flatten.44
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 45], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 46], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IFEQ,line 47], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IF_ICMPGE,line 48], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.BigFractionFormat.format.168
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 169], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFEQ,line 171], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[27,IFEQ,line 173], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.Fraction.getReducedFraction.601
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFNE,line 601], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFNE,line 605], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IF_ICMPNE,line 609], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[27,IFNE,line 609], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFGE,line 612], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[40,IF_ICMPEQ,line 613], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[43,IF_ICMPNE,line 613], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.BigFraction.equals.704
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IF_ACMPNE,line 706], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IFEQ,line 708], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFEQ,line 711], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFEQ,line 711], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.ProperBigFractionFormat.format.92
------------------------------------------------------------------------------------------
NodeCoverage [node[23,IFNE,line 100], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[38,IFGE,line 103], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.fraction.FractionFormat.format.174
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IFEQ,line 176], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFEQ,line 178], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.geometry.Rotation.getAngles.614
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ACMPNE,line 614], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFLT,line 623], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFLE,line 623], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ACMPNE,line 632], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[68,IFLT,line 641], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[73,IFLE,line 641], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[107,IF_ACMPNE,line 650], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[120,IFLT,line 659], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[125,IFLE,line 659], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[159,IF_ACMPNE,line 668], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[172,IFLT,line 677], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[177,IFLE,line 677], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[212,IF_ACMPNE,line 686], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[225,IFLT,line 695], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[230,IFLE,line 695], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[265,IF_ACMPNE,line 704], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[278,IFLT,line 713], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[283,IFLE,line 713], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[317,IF_ACMPNE,line 722], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[330,IFLT,line 731], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[335,IFLE,line 731], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[369,IF_ACMPNE,line 740], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[382,IFLT,line 749], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[387,IFLE,line 749], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[421,IF_ACMPNE,line 758], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[434,IFLT,line 767], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[439,IFLE,line 767], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[473,IF_ACMPNE,line 776], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[486,IFLT,line 785], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[491,IFLE,line 785], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[525,IF_ACMPNE,line 794], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[538,IFLT,line 803], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[543,IFLE,line 803], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[587,IFLT,line 821], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[592,IFLE,line 821], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.geometry.Vector3D.angle.340
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IFNE,line 341], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[27,IFLT,line 347], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFLE,line 347], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IFLT,line 350], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.geometry.Vector3D.equals.416
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ACMPNE,line 416], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFEQ,line 420], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFEQ,line 422], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IFNE,line 426], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[28,IFNE,line 426], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IFNE,line 426], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix.318
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNONNULL,line 318], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[4,IFLE,line 319], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IFLE,line 324], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFNE,line 330], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[43,IFNE,line 335], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[61,IF_ICMPGE,line 339], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[67,IF_ICMPEQ,line 340], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix.643
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix.703
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex.594
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNE,line 594], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 595], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[32,IF_ICMPGE,line 601], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[51,IF_ICMPGE,line 604], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.RealVectorFormat.format.208
------------------------------------------------------------------------------------------
NodeCoverage [node[16,IF_ICMPGE,line 215], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFLE,line 216], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.RealVectorFormat.parse.280
------------------------------------------------------------------------------------------
NodeCoverage [node[13,IFNE,line 284], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFEQ,line 290], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[26,IFNE,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFNE,line 294], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[41,IFEQ,line 299], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[54,IFNULL,line 302], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[76,IFNE,line 316], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[88,IF_ICMPGE,line 322], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayFieldVector.equals.820
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ACMPNE,line 820], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[6,IFNONNULL,line 824], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IF_ICMPEQ,line 831], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[26,IF_ICMPGE,line 835], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IFNE,line 836], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.SparseFieldVector.subtract.525
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 527], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 528], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.SparseFieldVector.equals.614
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ACMPNE,line 614], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[7,IFNE,line 618], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFNONNULL,line 625], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[18,IFNULL,line 626], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[26,IFNE,line 629], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[33,IF_ICMPEQ,line 632], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFEQ,line 637], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[54,IFNE,line 640], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[64,IFEQ,line 645], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[76,IFNE,line 648], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockFieldMatrix.toBlocksLayout.214
------------------------------------------------------------------------------------------
NodeCoverage [node[29,IF_ICMPGE,line 220], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IF_ICMPEQ,line 222], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[71,IF_ICMPGE,line 233], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[90,IF_ICMPGE,line 237], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[121,IF_ICMPGE,line 248], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockFieldMatrix.setSubMatrix.813
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IF_ICMPGE,line 814], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[41,IF_ICMPGE,line 820], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[49,IF_ICMPEQ,line 821], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[92,IF_ICMPGE,line 835], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[117,IF_ICMPGE,line 841], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[156,IF_ICMPGE,line 850], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockFieldMatrix.getRowMatrix.865
------------------------------------------------------------------------------------------
NodeCoverage [node[36,IF_ICMPGE,line 874], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPLE,line 878], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockFieldMatrix.setRowMatrix.918
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IF_ICMPNE,line 920], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IF_ICMPEQ,line 921], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[67,IF_ICMPGE,line 934], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[89,IF_ICMPLE,line 938], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockRealMatrix.toBlocksLayout.209
------------------------------------------------------------------------------------------
NodeCoverage [node[29,IF_ICMPGE,line 215], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IF_ICMPEQ,line 217], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[66,IF_ICMPGE,line 227], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[85,IF_ICMPGE,line 231], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IF_ICMPGE,line 242], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockRealMatrix.setSubMatrix.839
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IF_ICMPGE,line 840], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[41,IF_ICMPGE,line 846], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[49,IF_ICMPEQ,line 847], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[92,IF_ICMPGE,line 861], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[117,IF_ICMPGE,line 867], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[156,IF_ICMPGE,line 876], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockRealMatrix.getRowMatrix.891
------------------------------------------------------------------------------------------
NodeCoverage [node[34,IF_ICMPGE,line 900], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[56,IF_ICMPLE,line 904], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.BlockRealMatrix.setRowMatrix.944
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IF_ICMPNE,line 946], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IF_ICMPEQ,line 947], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[67,IF_ICMPGE,line 960], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[89,IF_ICMPLE,line 964], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.add.261
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 261], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFEQ,line 268], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[27,IFNULL,line 269], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.subtract.303
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 303], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFEQ,line 310], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[27,IFNULL,line 310], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.ebeMultiply.595
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 595], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IF_ICMPGE,line 600], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.ebeDivide.633
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 633], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IF_ICMPGE,line 638], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.dotProduct.687
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 687], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFEQ,line 694], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IFNULL,line 694], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.getDistance.758
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.getL1Distance.806
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 806], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IF_ICMPGE,line 811], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.getLInfDistance.854
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 854], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IF_ICMPGE,line 859], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.outerProduct.942
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 942], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IF_ICMPGE,line 948], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[32,IF_ICMPGE,line 949], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.ArrayRealVector.equals.1190
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ACMPNE,line 1190], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[6,IFNULL,line 1194], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 1194], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IF_ICMPEQ,line 1200], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IFEQ,line 1204], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IF_ICMPGE,line 1208], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[44,IFEQ,line 1209], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.Array2DRowFieldMatrix.setSubMatrix.309
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNONNULL,line 309], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[4,IFLE,line 310], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[16,IFLE,line 314], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[31,IFNE,line 319], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[43,IFNE,line 325], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[63,IF_ICMPGE,line 330], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[69,IF_ICMPEQ,line 331], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix.317
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNONNULL,line 317], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[4,IFLE,line 318], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IFLE,line 322], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFNE,line 327], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[43,IFNE,line 333], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[61,IF_ICMPGE,line 338], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[67,IF_ICMPEQ,line 339], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.OpenMapRealVector.getLInfDistance.520
------------------------------------------------------------------------------------------
NodeCoverage [node[8,IFEQ,line 522], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFLE,line 525], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[33,IFEQ,line 530], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[43,IFNE,line 533], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[48,IFLE,line 534], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.OpenMapRealVector.getLInfDistance.555
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IF_ICMPGE,line 557], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IFLE,line 559], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.OpenMapRealVector.setEntry.642
------------------------------------------------------------------------------------------
NodeCoverage [node[6,IFNE,line 643], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFEQ,line 645], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.OpenMapRealVector.subtract.711
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IF_ICMPGE,line 713], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 714], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors.473
------------------------------------------------------------------------------------------
NodeCoverage [node[25,IF_ICMPGE,line 478], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[67,IF_ICMPGE,line 487], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[75,IFLE,line 488], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[88,IFLE,line 491], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[99,IFEQ,line 496], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[104,IF_ICMPGE,line 497], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[114,IFGT,line 498], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[128,IFGT,line 501], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[139,IF_ICMPGE,line 507], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[148,IF_ICMPGE,line 511], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[171,IFNE,line 513], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[177,IF_ICMPEQ,line 517], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[181,IF_ICMPNE,line 518], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[220,IFGE,line 524], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[270,IF_ICMPLT,line 533], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[288,IFLT,line 536], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[351,IFNE,line 549], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[414,IF_ICMPGE,line 559], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[464,IFNE,line 565], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[467,IF_ICMPLT,line 565], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[487,IF_ICMPNE,line 571], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[494,IF_ICMPGE,line 575], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[508,IF_ICMPGE,line 578], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[515,IFLE,line 579], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[527,IF_ICMPEQ,line 584], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[545,IF_ICMPGE,line 587], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[578,IF_ICMPGE,line 597], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[586,IFLE,line 598], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[598,IFEQ,line 603], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[603,IF_ICMPGE,line 604], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[613,IFGE,line 605], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[632,IF_ICMPGE,line 612], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[637,IF_ICMPGE,line 613], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.ContinuousOutputModel.append.129
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 129], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[8,IFNE,line 133], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[24,IF_ICMPEQ,line 138], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[49,IFEQ,line 144], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[84,IFLE,line 154], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[102,IFEQ,line 161], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime.258
------------------------------------------------------------------------------------------
NodeCoverage [node[40,IFGT,line 268], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[52,IFLT,line 273], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[64,IF_ICMPLE,line 280], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[78,IFGE,line 285], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[92,IFLE,line 288], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[135,IFLT,line 302], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[142,IFGE,line 302], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[236,IF_ICMPGE,line 325], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[244,IF_ICMPLE,line 327], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[255,IF_ICMPGT,line 335], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[265,IFLE,line 335], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.ContinuousOutputModel.locatePoint.361
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 361], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[7,IFGE,line 362], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IFLE,line 364], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFLE,line 370], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[30,IFGE,line 372], decis], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.events.EventState.evaluateStep.201
------------------------------------------------------------------------------------------
NodeCoverage [node[15,IFGE,line 205], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[20,IFEQ,line 209], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[62,IF_ICMPGE,line 216], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[87,IFLT,line 224], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[92,IFEQ,line 224], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[97,IFLT,line 228], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[119,IFLT,line 244], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[122,IFEQ,line 252], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[134,IF_ICMPGE,line 253], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[140,IFLE,line 253], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[163,IFLE,line 261], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[171,IFGT,line 269], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[198,IFNE,line 276], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[206,IFGT,line 277], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[215,IFGT,line 278], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[224,IFNE,line 282], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[233,IFLE,line 283], decis, inloop], covered=false, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep.126
------------------------------------------------------------------------------------------
NodeCoverage [node[6,IFEQ,line 129], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[11,IFNE,line 136], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[18,IFEQ,line 139], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[36,IFEQ,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[44,IFEQ,line 150], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[47,IFNONNULL,line 151], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[54,IFEQ,line 154], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[61,IFGE,line 155], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[72,IFLE,line 159], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[79,IFNULL,line 168], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[89,IFNULL,line 172], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[92,IFEQ,line 172], decis], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.events.CombinedEventsManager.reset.236
------------------------------------------------------------------------------------------
NodeCoverage [node[8,IFEQ,line 238], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[17,IFEQ,line 239], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate.210
------------------------------------------------------------------------------------------
NodeCoverage [node[18,IFLE,line 214], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IF_ACMPEQ,line 217], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[60,IFEQ,line 230], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[104,IFLT,line 247], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[135,IF_ICMPGE,line 260], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[171,IFLT,line 269], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[209,IF_ICMPGE,line 283], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[264,IFNE,line 298], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[271,IFEQ,line 303], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[303,IFEQ,line 315], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[307,IFLT,line 315], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[315,IFGT,line 315], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[332,IFEQ,line 319], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[336,IFLT,line 319], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[344,IFGT,line 319], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[350,IFEQ,line 320], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[361,IFEQ,line 327], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.rescale.429
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNONNULL,line 429], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IF_ICMPGE,line 430], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IF_ICMPGE,line 435], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep.465
------------------------------------------------------------------------------------------
NodeCoverage [node[23,IF_ICMPGE,line 471], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[57,IF_ICMPGE,line 478], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[62,IF_ICMPNE,line 480], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[79,IF_ICMPGE,line 486], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[115,IFEQ,line 495], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[119,IF_ICMPGT,line 495], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[123,IF_ICMPGE,line 495], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[131,IF_ICMPGE,line 497], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[157,IF_ICMPGE,line 502], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[191,IFLE,line 506], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[201,IF_ICMPGE,line 514], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate.554
------------------------------------------------------------------------------------------
NodeCoverage [node[15,IFLE,line 557], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IF_ICMPGE,line 567], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[84,IF_ICMPGE,line 573], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[108,IF_ICMPGE,line 580], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[125,IF_ACMPEQ,line 586], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[144,IFEQ,line 593], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[159,IF_ICMPGE,line 595], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[189,IFNONNULL,line 608], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[222,IFEQ,line 616], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[265,IFEQ,line 632], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[287,IFEQ,line 643], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[291,IFNE,line 648], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[299,IFEQ,line 652], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[323,IFEQ,line 665], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[331,IFGT,line 665], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[333,IFNE,line 665], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[341,IFGE,line 665], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[356,IFEQ,line 670], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[360,IFLT,line 670], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[368,IFGT,line 670], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[378,IFEQ,line 674], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[392,IFNE,line 679], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[403,IFNE,line 679], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[413,IFNE,line 679], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[431,IFLE,line 692], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[450,IF_ICMPGE,line 701], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[484,IFGT,line 707], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[487,IF_ICMPLE,line 707], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[491,IFLE,line 707], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[579,TABLESWITCH,line 725], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[582,IF_ICMPLE,line 728], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[584,IFNE,line 728], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[588,IFGT,line 731], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[622,IFLE,line 740], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[631,IF_ICMPLE,line 746], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[646,IFGE,line 746], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[657,IFGT,line 758], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[680,IFLE,line 766], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[687,IF_ICMPLE,line 771], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[702,IFGE,line 771], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[713,IFLE,line 782], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[718,IF_ICMPLE,line 784], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[733,IFGE,line 784], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[744,IFNE,line 795], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[747,IFEQ,line 795], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[751,IFGT,line 795], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[756,IFNE,line 807], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[770,IFEQ,line 814], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[772,IFNE,line 814], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[777,IF_ICMPGT,line 817], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[801,IF_ICMPGE,line 823], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[829,IF_ICMPGE,line 829], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[856,IF_ICMPGT,line 832], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[884,IF_ICMPGE,line 835], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[924,IF_ICMPGE,line 840], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[947,IF_ICMPGT,line 845], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[961,IF_ICMPLT,line 846], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[967,IF_ICMPGE,line 847], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[996,IFLT,line 855], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[1007,IFEQ,line 862], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[1030,IFLE,line 867], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[1036,IFNE,line 877], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1074,IF_ICMPNE,line 890], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1078,IFEQ,line 892], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1084,IF_ICMPGT,line 895], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1101,IFGE,line 897], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1121,IFGE,line 899], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1139,IF_ICMPLE,line 904], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1156,IFGE,line 904], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[1173,IFGE,line 908], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1183,IFEQ,line 913], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1200,IF_ICMPGT,line 920], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1209,IF_ICMPGE,line 923], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1224,IFGE,line 923], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1279,IFNE,line 942], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1286,IFEQ,line 948], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[1297,IFEQ,line 955], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate.193
------------------------------------------------------------------------------------------
NodeCoverage [node[18,IFLE,line 196], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[25,IF_ACMPEQ,line 199], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[49,IFEQ,line 209], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[99,IFLT,line 229], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[110,IF_ICMPGE,line 235], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[118,IFNONNULL,line 237], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[165,IFLT,line 245], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[216,IF_ICMPGE,line 265], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[274,IFNE,line 279], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[281,IFEQ,line 284], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[313,IFEQ,line 295], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[317,IFLT,line 295], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[325,IFGT,line 295], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[342,IFEQ,line 299], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[346,IFLT,line 299], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[354,IFGT,line 299], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[360,IFEQ,line 300], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[371,IFEQ,line 308], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.sampling.StepNormalizer.handleStep.118
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNONNULL,line 118], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFLT,line 126], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[36,IFNE,line 127], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[54,IFLE,line 134], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[61,IFEQ,line 135], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[110,IFLE,line 149], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[118,IFEQ,line 153], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.sampling.DummyStepInterpolator.writeExternal.115
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNULL,line 117], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[12,IF_ICMPGE,line 118], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.sampling.DummyStepInterpolator.readExternal.134
------------------------------------------------------------------------------------------
NodeCoverage [node[6,IFNONNULL,line 136], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[23,IF_ICMPGE,line 140], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.sampling.NordsieckStepInterpolator.writeExternal.224
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.ode.sampling.NordsieckStepInterpolator.readExternal.257
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IFNONNULL,line 263], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[25,IFEQ,line 265], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[34,IF_ICMPGE,line 267], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[51,IFEQ,line 275], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[62,IFEQ,line 281], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[64,IFEQ,line 281], decis], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizer.optimize.181
------------------------------------------------------------------------------------------
NodeCoverage [node[19,IF_ICMPGE,line 187], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[45,IFNE,line 192], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[106,IFNONNULL,line 227], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.SimpleRealPointChecker.converged.75
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFLE,line 80], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFLE,line 80], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.SimpleVectorialValueChecker.converged.75
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFLE,line 82], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFLE,line 82], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer.optimize.231
------------------------------------------------------------------------------------------
NodeCoverage [node[21,IF_ICMPGE,line 237], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IFNE,line 242], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[53,IFNE,line 243], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[138,IF_ICMPGE,line 263], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[144,IFEQ,line 264], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[193,IF_ICMPGE,line 274], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IF_ACMPNE,line 278], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[215,IFGE,line 278], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[220,IFEQ,line 278], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[236,IFLT,line 283], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[239,IF_ACMPNE,line 283], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[246,IFGE,line 283], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[251,IFEQ,line 283], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[268,IFEQ,line 286], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[316,IFEQ,line 301], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizer.optimize.177
------------------------------------------------------------------------------------------
NodeCoverage [node[19,IF_ICMPGE,line 183], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[44,IFNE,line 188], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[104,IFNONNULL,line 217], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.LeastSquaresConverter.value.163
------------------------------------------------------------------------------------------
NodeCoverage [node[10,IF_ICMPEQ,line 164], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IF_ICMPGE,line 168], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[54,IFNULL,line 174], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[60,IF_ICMPGE,line 175], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[81,IFNULL,line 179], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[94,IF_ICMPGE,line 180], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[117,IF_ICMPGE,line 184], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer.optimize.167
------------------------------------------------------------------------------------------
NodeCoverage [node[16,IF_ICMPGE,line 172], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[41,IFNE,line 177], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[93,IFNONNULL,line 205], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.SimpleVectorialPointChecker.converged.75
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IF_ICMPGE,line 77], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFLE,line 82], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFLE,line 82], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.direct.MultiDirectional.iterateSimplex.64
------------------------------------------------------------------------------------------
NodeCoverage [node[22,IFGE,line 75], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFGT,line 80], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[53,IFGE,line 91], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[66,IF_ICMPGE,line 99], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[83,IFEQ,line 102], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.direct.NelderMead.iterateSimplex.77
------------------------------------------------------------------------------------------
NodeCoverage [node[35,IF_ICMPGE,line 91], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IF_ICMPGE,line 93], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[69,IF_ICMPGE,line 98], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[86,IF_ICMPGE,line 104], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[119,IFGT,line 109], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[124,IFGE,line 110], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[134,IFGE,line 115], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[142,IF_ICMPGE,line 119], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[175,IFGE,line 124], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[190,IFGE,line 134], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IF_ICMPGE,line 138], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[231,IFGT,line 143], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[245,IF_ICMPGE,line 153], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[278,IFGE,line 158], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[296,IF_ICMPGE,line 168], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[307,IF_ICMPGE,line 170], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.fitting.GaussianParametersGuesser.findMinY.112
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IF_ICMPGE,line 113], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IFGE,line 114], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.fitting.GaussianParametersGuesser.findMaxY.129
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IF_ICMPGE,line 130], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IFLE,line 131], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.fitting.GaussianParametersGuesser.getInterpolationPointsForY.192
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFNE,line 192], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFGE,line 196], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFLT,line 196], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IF_ICMPGE,line 196], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IFEQ,line 198], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IFGE,line 199], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[89,IF_ICMPGE,line 207], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.determineLMParameter.509
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.determineLMDirection.678
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer.findUpperBound.227
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IFGE,line 229], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IFGT,line 232], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.linear.SimplexSolver.getPivotColumn.62
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.linear.SimplexSolver.getPivotRow.81
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.linear.SimplexSolver.doIteration.125
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.univariate.BracketFinder.search.124
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IF_ACMPNE,line 124], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFEQ,line 128], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IFGE,line 128], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFLE,line 128], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[56,IFEQ,line 143], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[60,IFGE,line 143], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[65,IFLE,line 143], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[75,IF_ICMPLE,line 144], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[106,IFGE,line 152], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[147,IFLE,line 158], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[154,IFEQ,line 160], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[158,IFGE,line 160], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[163,IFLE,line 160], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[174,IFEQ,line 168], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[178,IFLE,line 168], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[183,IFGE,line 168], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[212,IFLT,line 177], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[230,IFLE,line 180], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[237,IFEQ,line 182], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[241,IFGE,line 182], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[246,IFLE,line 182], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.optimization.univariate.BrentOptimizer.localMin.86
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFGT,line 86], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFGT,line 89], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFGE,line 94], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[48,IFNE,line 108], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[85,IFLE,line 120], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[98,IFLE,line 126], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[136,IFLE,line 132], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[155,IFLE,line 141], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[163,IFGE,line 141], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[173,IFGE,line 143], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[187,IFLT,line 149], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[193,IFGE,line 149], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[197,IFGT,line 150], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[208,IFGE,line 158], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[226,IFGE,line 167], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[244,IFGE,line 176], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[248,IFLT,line 177], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[268,IFNE,line 187], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[275,IFGT,line 192], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[279,IFGE,line 193], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[301,IFGE,line 205], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[310,IFLE,line 210], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[314,IFNE,line 210], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[327,IFLE,line 215], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[331,IFEQ,line 215], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[335,IFNE,line 215], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[343,IFEQ,line 221], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.random.RandomDataImpl.nextHexString.155
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFGT,line 155], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IF_ICMPGE,line 170], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IF_ICMPNE,line 181], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.random.RandomDataImpl.nextPoisson.359
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFGT,line 359], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFGE,line 366], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IFGE,line 372], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[47,IFLT,line 375], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[74,IFGE,line 387], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[169,IFGT,line 407], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[187,IFGT,line 410], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[192,IFGE,line 410], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[197,IFGE,line 413], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[225,IFLE,line 417], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[258,IFGE,line 426], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[277,IFGE,line 428], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[279,IFNE,line 428], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[319,IFGE,line 434], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[328,IFLE,line 438], decis, loopHeader], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[343,IFGE,line 441], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.random.RandomDataImpl.shuffle.939
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IF_ICMPLT,line 940], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 941], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose.191
------------------------------------------------------------------------------------------
NodeCoverage [node[20,IF_ICMPGE,line 197], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[33,IFEQ,line 202], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[47,IF_ICMPGE,line 206], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[69,IFLE,line 209], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[83,IF_ICMPEQ,line 216], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[118,IFGE,line 224], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[121,IFNE,line 226], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[131,IF_ICMPGE,line 231], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[144,IFGE,line 232], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[186,IF_ICMPGE,line 250], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[224,IF_ICMPGE,line 255], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[268,IF_ICMPGE,line 264], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[284,IF_ICMPGE,line 272], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[290,IF_ICMPGE,line 273], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.random.MersenneTwister.setSeed.163
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFNONNULL,line 163], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 172], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFGE,line 173], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[52,IFGE,line 174], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[88,IF_ICMPLT,line 178], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[102,IF_ICMPLT,line 182], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[110,IFEQ,line 187], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[122,IFGE,line 188], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[143,IFGE,line 189], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[173,IF_ICMPLT,line 193], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.random.MersenneTwister.next.225
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IF_ICMPLT,line 227], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IF_ICMPGE,line 229], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[57,IF_ICMPGE,line 235], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.special.Gamma.logGamma.97
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 99], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[6,IFGT,line 99], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFLE,line 105], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.special.Gamma.regularizedGammaP.151
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 153], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFNE,line 153], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFLE,line 153], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFGE,line 153], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFNE,line 155], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFLT,line 157], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[53,IFLE,line 166], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[58,IFGE,line 166], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[62,IFGE,line 166], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[84,IFLT,line 174], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[92,IFEQ,line 176], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.special.Gamma.regularizedGammaQ.228
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 230], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFNE,line 230], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFLE,line 230], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFGE,line 230], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFNE,line 232], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFGE,line 234], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.special.Beta.regularizedBeta.120
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 122], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFNE,line 122], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[8,IFNE,line 122], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[12,IFLT,line 122], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IFGT,line 122], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFLE,line 122], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IFGT,line 122], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IFLE,line 126], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.Frequency.equals.590
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ACMPNE,line 590], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[7,IFNE,line 592], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFNONNULL,line 595], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[18,IFNULL,line 596], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[26,IFNE,line 598], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals.77
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 77], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IF_ICMPEQ,line 81], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IF_ICMPGE,line 84], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IF_ICMPEQ,line 85], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.cluster.95
------------------------------------------------------------------------------------------
NodeCoverage [node[10,IFGE,line 99], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IF_ICMPGE,line 100], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFEQ,line 103], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IFEQ,line 105], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[45,TABLESWITCH,line 106], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[80,IFNE,line 122], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[92,IFNE,line 128], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters.164
------------------------------------------------------------------------------------------
NodeCoverage [node[31,IF_ICMPGE,line 172], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IF_ICMPGE,line 176], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[80,IF_ICMPGE,line 187], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[86,IFLT,line 188], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getPointFromLargestVarianceCluster.208
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IFEQ,line 210], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IFNE,line 211], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFEQ,line 216], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[48,IFLE,line 222], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[55,IFNONNULL,line 231], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getPointFromLargestNumberCluster.249
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IFEQ,line 251], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IF_ICMPLE,line 257], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[27,IFNONNULL,line 265], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster.321
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IFEQ,line 323], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IFGE,line 325], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.correlation.SpearmansCorrelation.correlation.149
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IF_ICMPEQ,line 149], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IF_ICMPGE,line 152], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.correlation.Covariance.covariance.222
------------------------------------------------------------------------------------------
NodeCoverage [node[12,IF_ICMPEQ,line 225], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IF_ICMPGE,line 228], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[59,IF_ICMPGE,line 234], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[88,IFEQ,line 240], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.correlation.PearsonsCorrelation.correlation.229
------------------------------------------------------------------------------------------
NodeCoverage [node[8,IF_ICMPEQ,line 230], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IF_ICMPGE,line 232], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IF_ICMPGE,line 236], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue.159
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize.322
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.AggregateSummaryStatistics.aggregate.302
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFNONNULL,line 302], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFNE,line 306], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IFEQ,line 316], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[45,IFLT,line 318], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[48,IFEQ,line 318], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[56,IFGT,line 321], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[59,IFEQ,line 321], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[111,IFNE,line 333], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[118,IFNE,line 335], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.append.334
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IF_ICMPGE,line 335], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFLE,line 336], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.Mean.evaluate.155
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFEQ,line 155], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IF_ICMPGE,line 164], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.Mean.evaluate.203
------------------------------------------------------------------------------------------
NodeCoverage [node[6,IFEQ,line 203], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[34,IF_ICMPGE,line 212], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.Variance.evaluate.245
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 247], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[12,IF_ICMPNE,line 249], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPLE,line 251], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.Variance.evaluate.305
------------------------------------------------------------------------------------------
NodeCoverage [node[8,IFEQ,line 307], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[13,IF_ICMPNE,line 309], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IF_ICMPLE,line 311], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.Variance.evaluate.391
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 393], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IF_ICMPNE,line 394], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IF_ICMPLE,line 396], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[29,IF_ICMPGE,line 400], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[53,IFEQ,line 406], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.Variance.evaluate.493
------------------------------------------------------------------------------------------
NodeCoverage [node[8,IFEQ,line 495], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[11,IF_ICMPNE,line 496], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IF_ICMPLE,line 498], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[30,IF_ICMPGE,line 502], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[64,IF_ICMPGE,line 509], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[75,IFEQ,line 513], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate.155
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 157], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IF_ICMPLE,line 157], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IF_ICMPGE,line 167], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[72,IF_ICMPGE,line 175], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate.166
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 168], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IF_ICMPLE,line 168], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IF_ICMPGE,line 179], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.moment.SemiVariance.evaluate.276
------------------------------------------------------------------------------------------
NodeCoverage [node[8,IFNE,line 277], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IF_ICMPNE,line 280], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[28,IF_ICMPGE,line 287], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IFLE,line 288], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IF_ICMPNE,line 288], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IFEQ,line 294], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.rank.Min.evaluate.128
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 129], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNE,line 132], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFGE,line 133], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.rank.Percentile.select.311
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IF_ICMPLE,line 315], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IF_ICMPGE,line 318], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFLT,line 318], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IF_ICMPGE,line 325], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IF_ICMPNE,line 330], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[53,IF_ICMPGE,line 333], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.rank.Max.evaluate.128
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 129], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IF_ICMPGE,line 131], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFNE,line 132], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFLE,line 133], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.summary.Product.evaluate.122
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 123], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IF_ICMPGE,line 125], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.summary.Product.evaluate.162
------------------------------------------------------------------------------------------
NodeCoverage [node[8,IFEQ,line 163], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[17,IF_ICMPGE,line 165], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.summary.SumOfSquares.evaluate.120
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 121], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IF_ICMPGE,line 123], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.summary.Sum.evaluate.121
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 122], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IF_ICMPGE,line 124], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.summary.Sum.evaluate.160
------------------------------------------------------------------------------------------
NodeCoverage [node[8,IFEQ,line 161], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[17,IF_ICMPGE,line 163], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.descriptive.summary.SumOfLogs.evaluate.132
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFEQ,line 133], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IF_ICMPGE,line 135], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats.127
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IF_ICMPGE,line 127], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[20,IFEQ,line 134], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[28,IF_ICMPGT,line 135], decis, inloop], covered=false, coveredBranches=0, []]
NodeCoverage [node[60,IFEQ,line 148], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[80,IF_ICMPGE,line 154], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare.68
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IF_ICMPGE,line 68], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IF_ICMPEQ,line 72], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[57,IF_ICMPGE,line 80], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[83,IFLE,line 86], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[97,IF_ICMPGE,line 91], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[99,IFEQ,line 92], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison.225
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IF_ICMPGE,line 225], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IF_ICMPEQ,line 229], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[61,IF_ICMPGE,line 244], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[79,IFNE,line 249], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[93,IFNE,line 253], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[107,IFEQ,line 258], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[113,IFEQ,line 259], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[134,IF_ICMPGE,line 267], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[140,IFNE,line 268], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[146,IFNE,line 268], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[168,IFEQ,line 274], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkRectangular.355
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 355], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IF_ICMPEQ,line 356], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkPositive.371
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 371], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFGT,line 372], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkNonNegative.387
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 387], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFGE,line 388], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.ranking.NaturalRanking.rank.193
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IF_ICMPGE,line 194], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,TABLESWITCH,line 200], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[87,IF_ICMPGE,line 227], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[99,IFLE,line 228], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[107,IF_ICMPLE,line 231], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[146,IF_ICMPLE,line 242], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[154,IF_ACMPNE,line 245], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.ranking.NaturalRanking.removeNaNs.259
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 259], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IF_ICMPGE,line 264], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFEQ,line 265], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IF_ICMPGE,line 267], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.ranking.NaturalRanking.recodeNaNs.289
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 289], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFEQ,line 290], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.ranking.NaturalRanking.containsNaNs.304
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPGE,line 304], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFEQ,line 305], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.ranking.NaturalRanking.resolveTie.329
------------------------------------------------------------------------------------------
NodeCoverage [node[16,TABLESWITCH,line 334], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[57,IFEQ,line 347], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[86,IFEQ,line 357], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.ranking.NaturalRanking.getNanPositions.404
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IF_ICMPGE,line 405], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFEQ,line 406], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.stat.regression.SimpleRegression.removeData.174
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IFLE,line 174], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[115,IFLE,line 186], decis], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.transform.FastFourierTransformer.mdfft.569
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IF_ICMPNE,line 571], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[19,IF_ICMPGE,line 573], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[33,IFEQ,line 579], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[49,IF_ICMPGE,line 584], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[80,IF_ICMPNE,line 591], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[99,IF_ICMPGE,line 597], decis, loopHeader], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToFieldHashMap.get.199
------------------------------------------------------------------------------------------
NodeCoverage [node[12,IFEQ,line 201], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[22,IFNE,line 205], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[35,IFEQ,line 210], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[49,IFEQ,line 213], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToFieldHashMap.containsKey.229
------------------------------------------------------------------------------------------
NodeCoverage [node[12,IFEQ,line 231], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[19,IFNE,line 235], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[31,IFEQ,line 240], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[45,IFEQ,line 243], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToFieldHashMap.findInsertionIndex.291
------------------------------------------------------------------------------------------
NodeCoverage [node[10,IFNE,line 293], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IF_ICMPNE,line 295], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IF_ICMPNE,line 295], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IF_ICMPNE,line 301], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[52,IF_ICMPNE,line 307], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[57,IF_ICMPNE,line 307], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[62,IFNE,line 313], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[69,IF_ICMPNE,line 315], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[86,IFNE,line 326], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[93,IF_ICMPNE,line 328], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[98,IF_ICMPNE,line 328], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToFieldHashMap.remove.373
------------------------------------------------------------------------------------------
NodeCoverage [node[12,IFEQ,line 375], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[21,IFNE,line 379], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[34,IFEQ,line 384], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[48,IFEQ,line 387], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToFieldHashMap.put.429
------------------------------------------------------------------------------------------
NodeCoverage [node[10,IFGE,line 432], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFEQ,line 440], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IFEQ,line 442], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.TransformerMap.transform.141
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IFNE,line 143], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFEQ,line 143], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFNULL,line 147], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.TransformerMap.equals.158
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ACMPNE,line 158], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[7,IFEQ,line 161], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IFNE,line 163], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[25,IF_ICMPEQ,line 166], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[35,IFEQ,line 169], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[49,IFNE,line 170], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.addAndCheck.138
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFLE,line 139], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFGE,line 145], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IFGE,line 146], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFGT,line 148], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[54,IFGT,line 162], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.binomialCoefficient.198
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IF_ICMPEQ,line 199], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFNE,line 199], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[12,IF_ICMPEQ,line 202], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IF_ICMPNE,line 202], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IF_ICMPLE,line 206], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IF_ICMPGT,line 215], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[47,IF_ICMPGT,line 218], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[62,IF_ICMPGT,line 222], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[73,IF_ICMPGT,line 226], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[105,IF_ICMPGT,line 242], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.compareTo.392
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IFEQ,line 392], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IFGE,line 394], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.equals.544
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFNULL,line 544], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[3,IFNONNULL,line 544], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFNONNULL,line 545], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IFNONNULL,line 545], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFNE,line 545], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IF_ICMPEQ,line 547], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[32,IF_ICMPGE,line 550], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[40,IFNE,line 551], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.equalsIncludingNaN.570
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.equals.732
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFNULL,line 732], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[3,IFNONNULL,line 732], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[5,IFNONNULL,line 733], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[10,IFNONNULL,line 733], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFNE,line 733], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IF_ICMPEQ,line 735], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[32,IF_ICMPGE,line 738], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[40,IFNE,line 739], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.equalsIncludingNaN.758
------------------------------------------------------------------------------------------
NodeCoverage [node[1,IFNULL,line 758], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[3,IFNONNULL,line 758], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[5,IFNONNULL,line 759], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[10,IFNONNULL,line 759], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[15,IFNE,line 759], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[24,IF_ICMPEQ,line 761], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[32,IF_ICMPGE,line 764], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[40,IFNE,line 765], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.gcd.898
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFEQ,line 900], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFNE,line 900], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IF_ICMPEQ,line 901], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[13,IF_ICMPNE,line 901], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IFLE,line 913], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[41,IFLE,line 916], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[50,IFNE,line 921], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[54,IFNE,line 921], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[57,IF_ICMPGE,line 921], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[70,IF_ICMPNE,line 927], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[90,IF_ICMPNE,line 934], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[101,IFNE,line 940], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[108,IFLE,line 944], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[122,IFNE,line 953], decis, loopHeader], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.gcd.987
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.mulAndCheck.1258
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.nextAfter.1325
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 1325], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 1325], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 1327], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[15,IFGE,line 1328], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[42,IFLT,line 1339], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IFNE,line 1341], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[66,IFNE,line 1350], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.normalizeArray.1422
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFEQ,line 1422], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[10,IFEQ,line 1426], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[28,IF_ICMPGE,line 1433], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[33,IFEQ,line 1434], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IFNE,line 1438], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[67,IFNE,line 1442], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[77,IF_ICMPGE,line 1445], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[82,IFEQ,line 1446], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.roundUnscaled.1540
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.subAndCheck.1753
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFNE,line 1755], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[9,IFGE,line 1756], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.checkOrder.2080
------------------------------------------------------------------------------------------
NodeCoverage [node[13,IF_ICMPGE,line 2084], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,LOOKUPSWITCH,line 2085], decis, inloop], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[20,IFEQ,line 2087], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[26,IFGT,line 2088], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IFGE,line 2092], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[40,IFEQ,line 2098], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IFLT,line 2099], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IFLE,line 2103], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[64,IFNE,line 2113], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MathUtils.safeNorm.2211
------------------------------------------------------------------------------------------
Error!
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.asinh.581
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFLT,line 582], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IFLE,line 590], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IFLE,line 594], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[107,IFLE,line 596], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[162,IFLE,line 598], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[217,IFEQ,line 605], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.atanh.615
------------------------------------------------------------------------------------------
NodeCoverage [node[5,IFGE,line 616], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IFLE,line 622], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IFLE,line 626], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[75,IFLE,line 628], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[108,IFLE,line 630], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[143,IFEQ,line 637], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.exp.715
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFGE,line 723], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IF_ICMPLE,line 726], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[12,IFNULL,line 727], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IF_ICMPLE,line 734], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IFNULL,line 737], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IF_ICMPNE,line 744], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[66,IFNULL,line 747], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[105,IF_ICMPLE,line 763], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[107,IFNULL,line 764], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[205,IFEQ,line 816], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[234,IFNULL,line 822], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.expm1.845
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 845], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFNE,line 845], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFLE,line 849], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IFLT,line 849], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFLE,line 854], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[70,IFGE,line 869], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[308,IFEQ,line 945], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[404,IFNULL,line 978], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.log.1248
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 1248], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IFNE,line 1254], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFEQ,line 1254], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IFEQ,line 1255], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[24,IFNULL,line 1256], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IFNE,line 1265], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[36,IFNULL,line 1266], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[55,IFNE,line 1276], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[59,IFNE,line 1278], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[61,IFNULL,line 1280], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[77,IFNE,line 1289], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[86,IF_ICMPEQ,line 1296], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[88,IFNE,line 1296], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[92,IFGE,line 1297], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[96,IFLE,line 1297], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[98,IFNONNULL,line 1297], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[151,IFLT,line 1313], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[280,IFNULL,line 1360], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[351,IFLT,line 1378], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[589,IFNULL,line 1461], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.log1p.1474
------------------------------------------------------------------------------------------
NodeCoverage [node[14,IFNE,line 1477], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IFLE,line 1481], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[28,IFNE,line 1481], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IFGT,line 1485], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[38,IFGE,line 1485], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[48,IFEQ,line 1489], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.pow.1541
------------------------------------------------------------------------------------------
NodeCoverage [node[6,IFNE,line 1543], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[12,IFEQ,line 1547], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFNE,line 1552], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[27,IFEQ,line 1554], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IFGE,line 1558], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IFNE,line 1558], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[45,IFNE,line 1558], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[51,IFGE,line 1562], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[56,IFNE,line 1562], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[62,IFNE,line 1562], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[68,IFLE,line 1566], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[73,IFNE,line 1566], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[79,IFNE,line 1566], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[85,IFGE,line 1571], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[91,IFLE,line 1574], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[99,IFNE,line 1581], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[103,IFEQ,line 1582], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[109,IFGE,line 1585], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[117,IFNE,line 1592], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[123,IFNE,line 1593], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[131,IFLE,line 1596], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[139,IFNE,line 1603], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[143,IFEQ,line 1604], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[149,IFGE,line 1608], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[157,IFNE,line 1610], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[163,IFNE,line 1610], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[171,IFLE,line 1617], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[179,IFNE,line 1619], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[185,IFNE,line 1619], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[193,IFNE,line 1627], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[199,IFNE,line 1629], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[207,IFGE,line 1633], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[215,IFGE,line 1641], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[219,IFGE,line 1643], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[223,IFGT,line 1643], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[234,IFNE,line 1647], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[241,IFNE,line 1649], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[258,IFGE,line 1658], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[262,IFLE,line 1658], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[306,IFEQ,line 1671], decis], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.slowSin.1773
------------------------------------------------------------------------------------------
NodeCoverage [node[26,IFLT,line 1780], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IFNE,line 1784], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[59,IFEQ,line 1791], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[93,IFNULL,line 1800], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.slowCos.1816
------------------------------------------------------------------------------------------
NodeCoverage [node[26,IFLT,line 1823], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IFEQ,line 1827], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[59,IFEQ,line 1834], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[93,IFNULL,line 1843], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.tanQ.2138
------------------------------------------------------------------------------------------
NodeCoverage [node[229,IFEQ,line 2226], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[314,IFEQ,line 2259], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[324,IFEQ,line 2263], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.sin.2502
------------------------------------------------------------------------------------------
NodeCoverage [node[11,IFGE,line 2509], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFNE,line 2515], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[27,IFGE,line 2517], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IFNE,line 2523], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IFNE,line 2523], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[45,IFLE,line 2528], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[71,IFLE,line 2537], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[139,IFLE,line 2562], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[152,IFEQ,line 2575], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[158,TABLESWITCH,line 2579], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.cos.2599
------------------------------------------------------------------------------------------
NodeCoverage [node[7,IFGE,line 2603], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IFNE,line 2607], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFNE,line 2607], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[26,IFLE,line 2613], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[52,IFLE,line 2622], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[120,IFLE,line 2647], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[133,TABLESWITCH,line 2663], decis], covered=true, coveredBranches=1, [TRUE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.tan.2683
------------------------------------------------------------------------------------------
NodeCoverage [node[9,IFGE,line 2688], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFNE,line 2694], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IFGE,line 2696], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[33,IFNE,line 2702], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFNE,line 2702], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[45,IFLE,line 2708], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[71,IFLE,line 2717], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[139,IFLE,line 2742], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[154,IFLE,line 2755], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[198,IFNE,line 2771], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[212,IFEQ,line 2777], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.atan2.2950
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 2950], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[7,IFEQ,line 2950], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFNE,line 2954], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IFNE,line 2959], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[33,IFLE,line 2960], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[43,IFLT,line 2967], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[47,IFGE,line 2967], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[51,IFLT,line 2968], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[55,IFGE,line 2968], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[65,IFNE,line 2980], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[69,IFNE,line 2981], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[75,IFNE,line 2985], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[83,IFNE,line 2992], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[87,IFNE,line 2993], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[93,IFNE,line 2997], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[101,IFNE,line 3004], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[105,IFGT,line 3005], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[111,IFLE,line 3005], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[117,IFLT,line 3009], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[123,IFGE,line 3009], decis], covered=false, coveredBranches=1, [TRUE]]
NodeCoverage [node[129,IFNE,line 3014], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[133,IFGT,line 3016], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[139,IFLE,line 3016], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[145,IFLT,line 3020], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[151,IFGE,line 3020], decis], covered=false, coveredBranches=1, [TRUE]]
NodeCoverage [node[157,IFNE,line 3027], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[161,IFGT,line 3028], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[167,IFLE,line 3028], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[173,IFLT,line 3032], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[179,IFGE,line 3032], decis], covered=false, coveredBranches=1, [TRUE]]
NodeCoverage [node[188,IFEQ,line 3039], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[194,IFGE,line 3040], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[252,IFNE,line 3056], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[262,IFGE,line 3061], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.cbrt.3230
------------------------------------------------------------------------------------------
NodeCoverage [node[16,IF_ICMPNE,line 3234], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFNE,line 3235], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[43,IF_ICMPNE,line 3246], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[241,IFEQ,line 3301], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.scalb1.3423
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ICMPLE,line 3423], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IF_ICMPGE,line 3423], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[18,IFNE,line 3428], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFNE,line 3428], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[25,IFNE,line 3428], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[30,IF_ICMPGE,line 3431], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IFLE,line 3432], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[41,IF_ICMPLE,line 3434], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[45,IFLE,line 3435], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[73,IFGE,line 3447], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[75,IFLE,line 3449], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[88,IF_ICMPLE,line 3452], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[109,IFEQ,line 3461], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[122,IFNE,line 3469], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[128,IFNE,line 3473], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[134,IFEQ,line 3476], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[148,IF_ICMPGE,line 3483], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[162,IFNE,line 3486], decis], covered=false, coveredBranches=0, []]
NodeCoverage [node[169,IF_ICMPGE,line 3489], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[183,IFNE,line 3492], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.scalb2.3507
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IF_ICMPLE,line 3507], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IF_ICMPGE,line 3507], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IFNE,line 3512], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFNE,line 3512], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IFNE,line 3512], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[29,IF_ICMPGE,line 3515], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[33,IFLE,line 3516], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[40,IF_ICMPLE,line 3518], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[44,IFLE,line 3519], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[71,IFGE,line 3531], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[73,IFLE,line 3533], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[85,IF_ICMPLE,line 3536], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[104,IFEQ,line 3545], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[112,IFNE,line 3553], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[118,IFNE,line 3557], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[123,IF_ICMPEQ,line 3560], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[137,IF_ICMPGE,line 3567], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[148,IFNE,line 3570], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[155,IF_ICMPGE,line 3573], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[166,IFNE,line 3576], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.nextAfter1.3616
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 3616], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 3616], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[11,IFNE,line 3618], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[16,IFEQ,line 3620], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IFGE,line 3621], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[28,IFNE,line 3622], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[32,IFGE,line 3623], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[47,IFGE,line 3630], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[54,IFNE,line 3630], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[59,IFEQ,line 3630], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.nextAfter2.3672
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IFNE,line 3672], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[6,IFEQ,line 3672], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFNE,line 3674], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[19,IFEQ,line 3676], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFGE,line 3677], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[31,IFNE,line 3678], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IFGE,line 3679], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[51,IFGE,line 3686], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[56,IFNE,line 3686], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[61,IFEQ,line 3686], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.rint.3751
------------------------------------------------------------------------------------------
NodeCoverage [node[10,IFLE,line 3754], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[14,IFNE,line 3755], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[24,IFGE,line 3760], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IFNE,line 3766], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.FastMath.hypot.3936
------------------------------------------------------------------------------------------
NodeCoverage [node[2,IFNE,line 3936], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[5,IFEQ,line 3936], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[10,IFNE,line 3938], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[13,IFEQ,line 3938], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[26,IF_ICMPLE,line 3944], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[34,IF_ICMPLE,line 3947], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.MultidimensionalCounter.getCount.259
------------------------------------------------------------------------------------------
NodeCoverage [node[4,IF_ICMPEQ,line 259], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[20,IF_ICMPGE,line 263], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[26,IFLT,line 265], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[32,IF_ICMPLT,line 265], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.ResizableDoubleArray.discardExtremeElements.490
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IF_ICMPLE,line 490], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[21,IFGE,line 494], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[39,IFEQ,line 501], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[48,IFEQ,line 503], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.ResizableDoubleArray.getElement.574
------------------------------------------------------------------------------------------
NodeCoverage [node[3,IF_ICMPLT,line 574], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[23,IFLT,line 578], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToDoubleHashMap.get.184
------------------------------------------------------------------------------------------
NodeCoverage [node[12,IFEQ,line 186], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[22,IFNE,line 190], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[35,IFEQ,line 195], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[49,IFEQ,line 198], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey.214
------------------------------------------------------------------------------------------
NodeCoverage [node[12,IFEQ,line 216], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[19,IFNE,line 220], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[31,IFEQ,line 225], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[45,IFEQ,line 228], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex.276
------------------------------------------------------------------------------------------
NodeCoverage [node[10,IFNE,line 278], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[17,IF_ICMPNE,line 280], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[22,IF_ICMPNE,line 280], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[35,IF_ICMPNE,line 286], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[52,IF_ICMPNE,line 292], decis, loopHeader], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[57,IF_ICMPNE,line 292], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[62,IFNE,line 298], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[69,IF_ICMPNE,line 300], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[86,IFNE,line 311], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[93,IF_ICMPNE,line 313], decis, inloop], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[98,IF_ICMPNE,line 313], decis, inloop], covered=true, coveredBranches=1, [FALSE]]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToDoubleHashMap.remove.358
------------------------------------------------------------------------------------------
NodeCoverage [node[12,IFEQ,line 360], decis], covered=true, coveredBranches=1, [FALSE]]
NodeCoverage [node[21,IFNE,line 364], decis], covered=true, coveredBranches=1, [TRUE]]
NodeCoverage [node[34,IFEQ,line 369], decis, loopHeader], covered=false, coveredBranches=0, []]
NodeCoverage [node[48,IFEQ,line 372], decis, inloop], covered=false, coveredBranches=0, []]
------------------------------------------------------------------------------------------
org.apache.commons.math.util.OpenIntToDoubleHashMap.put.414
------------------------------------------------------------------------------------------
NodeCoverage [node[10,IFGE,line 417], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[37,IFEQ,line 425], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
NodeCoverage [node[46,IFEQ,line 427], decis], covered=true, coveredBranches=2, [TRUE, FALSE]]
------------------------------------------------------------------------------------------
